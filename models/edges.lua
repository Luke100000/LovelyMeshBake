--[[
# variables for edges
e1  e2  e3
e4      e5
e6  e7  e8
--]]

return function(renderer)
	local m = 0.2
	return renderer:newModel()
				   :default("color", 255, 255, 255, 255)
				   :variables("e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8")
				   :vuv(0, 0):edge("e1"):next()
				   :vuv(m, 0):edge("e2"):next()
				   :vuv(m, m):edge(0):next()
				   :vuv(0, m):edge("e4"):next()
				   :face()
				   :vuv(m, 0):edge("e2"):next()
				   :vuv(1 - m, 0):edge("e2"):next()
				   :vuv(1 - m, m):edge(0):next()
				   :vuv(m, m):edge(0):next()
				   :face()
				   :vuv(1, 0):edge("e3"):next()
				   :vuv(1, m):edge("e5"):next()
				   :vuv(1 - m, m):edge(0):next()
				   :vuv(1 - m, 0):edge("e2"):next()
				   :face()
				   :vuv(0, m):edge("e4"):next()
				   :vuv(m, m):edge(0):next()
				   :vuv(m, 1 - m):edge(0):next()
				   :vuv(0, 1 - m):edge("e4"):next()
				   :face()
				   :vuv(m, m):edge(0):next()
				   :vuv(1 - m, m):edge(0):next()
				   :vuv(1 - m, 1 - m):edge(0):next()
				   :vuv(m, 1 - m):edge(0):next()
				   :face()
				   :vuv(1 - m, m):edge(0):next()
				   :vuv(1, m):edge("e5"):next()
				   :vuv(1, 1 - m):edge("e5"):next()
				   :vuv(1 - m, 1 - m):edge(0):next()
				   :face()
				   :vuv(m, 1 - m):edge(0):next()
				   :vuv(m, 1):edge("e7"):next()
				   :vuv(0, 1):edge("e6"):next()
				   :vuv(0, 1 - m):edge("e4"):next()
				   :face()
				   :vuv(m, 1 - m):edge(0):next()
				   :vuv(1 - m, 1 - m):edge(0):next()
				   :vuv(1 - m, 1):edge("e7"):next()
				   :vuv(m, 1):edge("e7"):next()
				   :face()
				   :vuv(1 - m, 1 - m):edge(0):next()
				   :vuv(1, 1 - m):edge("e5"):next()
				   :vuv(1, 1):edge("e8"):next()
				   :vuv(1 - m, 1):edge("e7"):next()
				   :face()
				   :build()
end